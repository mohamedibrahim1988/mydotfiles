#################################
#             Shadows           #
#################################
shadow = true;
shadow-radius = 7;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-color = "#263238"
#################################
#           Fading              #
#################################
# Default: false
fading = true;
# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.05;
# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.05;
# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
fade-delta = 8


#################################
#   Transparency / Opacity      #
#################################

# Opacity of window titlebars and borders.
frame-opacity = 1.0;


#################################
#           Corners             #
#################################

corner-radius = 10

#################################
#            Blur               #
#################################
# Default: ""
blur-kern = "3x3box";

#################################
#       General Settings        #
#################################

# Default: "xrender"
backend = "glx"

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but may cause performance
# degradation. Only works with OpenGL.
dithered-present = false;

# Enable/disable VSync.
#
# Default: false
vsync = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# Has nothing to do with `corner-radius`.
#
# Default: false
detect-rounded-corners = true;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
# Default: false
detect-client-opacity = true;

#
# Default: false
use-ewmh-active-win = true

# Default: false
unredir-if-possible = true

# Default: false
detect-transient = true;

# Default: false
use-damage = true;

# Default: false
no-ewmh-fullscreen = false

rules: ({
  match = "focused";
#  shader = "/home/kz87/Code/picom-shaders/Artistic/window_borders.glsl";
}, {
  match = "class_g = 'GLWall'";
#  shader = "/home/kz87/Code/picom-shaders/Practical/disable_post.glsl";
  shadow = false;
}, {
  match = "class_g = 'i3lock'        || "
          "class_g = 'mpv'           || "
          "class_g = 'sm64ex'        || "
          "class_g = 'Discord'       || "
          "class_g = 'love'          || "
          "class_g = 'MPlayer'       || "
          "name   *= 'Eww'";
  unredir = false;
}, {
  match = "name = 'Eww - bar' || "
          "class_g = 'Eww - bar'           || "
          "class_g = 'eww'           || "
          "class_g = 'yawns'";
  full-shadow = true;
  blur-background = false;
}, {
  match = "window_type = 'unknown'       || "
          "window_type = 'desktop'       || "
          "window_type = 'toolbar'       || "
          "window_type = 'menu'          || "
          "window_type = 'utility'       || "
          "window_type = 'splash'        || "
          "window_type = 'dialog'        || "
          "window_type = 'dropdown_menu' || "
          "window_type = 'popup_menu'    || "
          "window_type = 'tooltip'       || "
          "window_type = 'toolbar'       || "
          "window_type = 'combo'         || "
          "window_type = 'dnd'           || "
          "class_g     = 'Pqiv'          || "
          "class_g     = 'GLWall'        || "
          "class_g     = 'mpv'           || "
          "class_g     = 'eww-music'     || "
          "class_g     = 'eww-calendar'  || "
          "class_g     = 'Eww'           || "
          "class_g     = 'eww'           || "
          "class_g     = 'Rofi'          || "
          "class_g     = 'i3lock'        || "
          "fullscreen";
  corner-radius = 0; 
}, {
  match = "window_type = 'tooltip'      || "
          "window_type = 'dnd'          || "
          "window_type = 'notification' || "
          "class_g = 'Rofi'             || "
          "window_type = 'dock'";
  full-shadow = true;
}, {
  match = "class_g = 'i3lock'";
  animations = ({
      triggers = ["open", "show"];
      anim-duration = 0.2;
      offset-y = {
        curve = "cubic-bezier(0, 1, 1, 1)";
        start = "- window-height";
        end = 0;
        duration = "anim-duration";
        };
      opacity = {
        end = 1;
        start = 1;
        duration = "anim-duration";
      };
      shadow-offset-y = "offset-y";
      shadow-opacity = "opacity";
      }, {
      triggers = ["close", "hide"];
      anim-duration = 0.4;
      offset-y = {
        curve = "cubic-bezier(1, 0, 1, 1)";
        start = 0;
        end = "- window-height";
        duration = "anim-duration";
        };
      shadow-offset-y = "offset-y";
      opacity = {
        end = 1;
        start = 1;
        duration = "anim-duration";
      };
      shadow-opacity = "opacity";
  });
}, {
  match = "window_type = 'notification'";
  animations = ({
      triggers = ["close", "hide"];
      preset = "disappear";
      scale = 1.4;
      duration = 0.2;
  });
}, {
  match = "class_g     = 'eww'     ||"
          "class_g     = 'Eww'     ||"
          "class_g = 'Rofi'";
  animations = ({
      triggers = ["open", "show"];
      preset = "slide-in";
      direction = "up";
      duration = 0.1;
      }, {
      triggers = ["close", "hide"];
      preset = "slide-out";
      direction = "up";
      duration = 0.1;
  });
}, {
  match = "window_type = 'popup_menu'   ||"
          "window_type = 'tooltip'      ||"
          "window_type = 'dropdown_menu'";
  animations = ({
      triggers = ["open", "show"];
      preset = "slide-in";
      direction = "up";
      duration = 0.1;
      }, {
      triggers = ["close", "hide"];
      preset = "slide-out";
      direction = "up";
      duration = 0.1;
  });
  opacity = 0.8;
})

animations = ({
  # Pop in
  # Options
  duration = 0.2;
  initial-scale = 0.8;
  
  triggers = ["open", "show"];
  anim-curve = {
        curve = "cubic-bezier(0, 1.5, 1, 1)";
        start = 0;
        end = 1;
        duration = "duration";
        }
  scale-x = "anim-curve * (1 - initial-scale) + initial-scale";
  scale-y = "anim-curve * (1 - initial-scale) + initial-scale";
  offset-x = "(1 - scale-x) / 2 * window-width" 
  offset-y = "(1 - scale-y) / 2 * window-height" 

  opacity = "anim-curve";
  shadow-offset-x = "offset-x";
  shadow-offset-y = "offset-y";
  shadow-scale-x = "scale-x";
  shadow-scale-y = "scale-y";
}, {
  # Pop-out
  # Options
  duration = 0.1;
  initial-scale = 0.8;

  triggers = ["hide"];
  anim-curve = {
        curve = "cubic-bezier(0, 0, 1, -0.5)";
        start = 1;
        end = 0;
        duration = "duration";
        }
  scale-x = "anim-curve * (1 - initial-scale) + initial-scale";
  scale-y = "anim-curve * (1 - initial-scale) + initial-scale";
  offset-x = "(1-scale-x) / 2 * window-width" 
  offset-y = "(1-scale-y) / 2 * window-height" 

  opacity = "anim-curve";
  shadow-offset-x = "offset-x";
  shadow-offset-y = "offset-y";
  shadow-scale-x = "scale-x";
  shadow-scale-y = "scale-y";
}, {
  triggers = ["close"];
  preset = "disappear";
  scale = 1.4;
  duration = 0.2;
}, {
  triggers = ["geometry"];
  preset = "geometry-change";
  duration = 0.2;
})

blur:
{
  method = "gaussian";
  size = 10;
  deviation = 5.0;
};

# `@include` directive can be used to include additional configuration files.
# Relative paths are search either in the parent of this configuration file
# (when the configuration is loaded through a symlink, the symlink will be
# resolved first). Or in `$XDG_CONFIG_HOME/picom/include`.
#
# @include "extra.conf"
